import picasso_base.*

struct message_box extends base_window
    var message=new string
    function on_layout() override
        text(message)
    end
    function on_draw() override
        set_window_focus()
        spacing()
        if button("OK") || is_key_pressed(get_key_index(keys.enter))
            this.on_close.activate(null)
            this.win_opened=false
        end
    end
end
struct question_box extends base_window
    var question=new string
    function on_layout() override
        text(question)
    end
    function on_draw() override
        set_window_focus()
        spacing()
        if button("Yes") || is_key_pressed(to_integer('Y'))
            this.on_close.activate(true)
            this.win_opened=false
        end
        same_line()
        if button("No") || is_key_pressed(to_integer('N'))
            this.on_close.activate(false)
            this.win_opened=false
        end
    end
end
struct file_explorer extends base_window
    var path="."
    var message=new string
    var filters={}
    var path_info=null
    var path_name=null
    var selected=0
    function read_path()
        if path[path.size-1]!=system.path.separator
            path+=system.path.separator
        end
        path_info=new array
        path_name=new array
        var info=system.path.scan(path)
        var regs=new array
        var files=new array
        foreach it in filters
            regs.push_back(regex.build(it))
        end
        foreach it in info
            if it.type==system.path.type.dir
                path_info.push_back(it)
            else
                foreach reg in regs
                    if !reg.match(it.name).empty()
                        files.push_back(it)
                    end
                end
            end
        end
        foreach it in files
            path_info.push_back(it)
        end
        foreach it in path_info
            if it.type==system.path.type.dir
                path_name.push_back(to_string(system.path.separator)+it.name)
            else
                path_name.push_back(it.name)
            end
        end
    end
    function on_layout() override
        text(message)
        separator()
        list_box("##dir_list",selected,path_name)
    end
    function on_draw() override
        var info=path_info.at(selected)
        if begin_popup_item("dir_list")
            if menu_item("Enter","",info.type==system.path.type.dir)
                path+=info.name
                read_path()
                selected=0
            end
            if menu_item("Select","",info.type!=system.path.type.dir)
                this.on_close.activate(path+info.name)
                this.win_opened=false
            end
            end_popup()
        end
        if is_item_hovered()&&is_mouse_double_clicked(0)
            if info.type==system.path.type.dir
                path+=info.name
                read_path()
                selected=0
            else
                this.on_close.activate(path+info.name)
                this.win_opened=false
            end
        end
        separator()
        if menu_item("Select","",info.type!=system.path.type.dir)
            this.on_close.activate(path+info.name)
            this.win_opened=false
        end
        separator()
        if menu_item("Cancel","",true)
            this.on_close.activate(null)
            this.win_opened=false
        end
    end
end